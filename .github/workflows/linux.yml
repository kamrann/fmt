name: linux

on: [workflow_dispatch]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        cxx: [clang++-20]
        build_type: [Debug]
        std: [20]
        shared: [""]
        cxxflags: [-stdlib=libc++]
        module: ["", -DFMT_MODULE=ON]
        include:
          - cxx: clang++-20
            build_type: Debug
            std: 20
            cxxflags: -stdlib=libc++
            install: sudo apt install clang-20 libc++-20-dev libc++abi-20-dev

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Set timezone
      run: sudo timedatectl set-timezone 'Europe/Kyiv'

    - name: Add Ubuntu mirrors
      run: |
        # GitHub Actions caching proxy is at times unreliable
        # see https://github.com/actions/runner-images/issues/7048.
        mirrors=/etc/apt/mirrors.txt
        printf 'http://azure.archive.ubuntu.com/ubuntu\tpriority:1\n' | \
          sudo tee $mirrors
        curl http://mirrors.ubuntu.com/mirrors.txt | sudo tee --append $mirrors
        sudo sed -i \
          "s~http://azure.archive.ubuntu.com/ubuntu/~mirror+file:$mirrors~" \
          /etc/apt/sources.list

    - name: Create build environment
      run: |
        sudo apt update
        ${{matrix.install}}
        sudo apt install locales-all
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure
      working-directory: ${{runner.workspace}}/build
      env:
        CXX: ${{matrix.cxx}}
        CXXFLAGS: ${{matrix.cxxflags}}
      run: |
        cmake -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
              -DCMAKE_CXX_STANDARD=${{matrix.std}} \
              -DCMAKE_CXX_VISIBILITY_PRESET=hidden \
              -DCMAKE_VISIBILITY_INLINES_HIDDEN=ON \
              -DFMT_DOC=OFF -DFMT_PEDANTIC=ON -DFMT_WERROR=ON \
              ${{matrix.fuzz}} ${{matrix.shared}} \
              ${{matrix.module}} \
              $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: |
        threads=`nproc`
        cmake --build . --config ${{matrix.build_type}} --parallel $threads

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: ctest -C ${{matrix.build_type}}
      env:
        CTEST_OUTPUT_ON_FAILURE: True
